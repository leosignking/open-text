plugins {
    id 'com.plantir.docker' version '0.25.0'
    id 'com.plantir.docker-run' version '0.25.0'
    id 'java'
    id 'org.springframework.boot' version '2.3.1.RELEASE'
}

apply plugin: 'io.spring.dependency-management'

group 'org.opentext'
version '1.0-APLHA'

sourceCompatibility = 1.8

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.json:json:20180813'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'junit:junit:4.12'
}

String dockerHubUsernameProperty = findProperty('dockerHubUsername') ?: 'rsridharreddy'
String imageName = "${dockerHubUsernameProperty}/open-text-consumer:$version"

docker {
    name imageName
    files "build/libs/${bootJar.archiveFileName.get()}"
    buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
}

dockerRun {
    name project.name
    image imageName
    ports '8080:8080'
    clean true
}

task wrapper(type: Wrapper) {
    gradleVersion = '6.6'
}
